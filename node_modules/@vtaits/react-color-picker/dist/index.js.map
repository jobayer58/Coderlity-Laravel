{"version":3,"sources":["../src/index.ts","../src/ColorPicker.tsx","../src/defaultColor.ts","../src/utils/common.ts","../src/utils/color.ts","../src/utils/toStringValue.ts","../src/utils/toColorValue.ts","../src/utils/validate.ts","../src/HueSpectrum.tsx","../src/SaturationSpectrum.tsx"],"sourcesContent":["import \"../style/index.css\";\n\nexport { ColorPicker, type ColorPickerProps } from \"./ColorPicker\";\nexport { HueSpectrum, type HueSpectrumProps } from \"./HueSpectrum\";\nexport {\n\tSaturationSpectrum,\n\ttype SaturationSpectrumProps,\n} from \"./SaturationSpectrum\";\n","import cx from \"classnames\";\nimport {\n\ttype CSSProperties,\n\tChildren,\n\tComponent,\n\ttype PropsWithChildren,\n\ttype ReactElement,\n} from \"react\";\nimport type { ColorFormats, ColorInput } from \"tinycolor2\";\n\nimport { HueSpectrum, type HueSpectrumProps } from \"./HueSpectrum\";\nimport {\n\tSaturationSpectrum,\n\ttype SaturationSpectrumProps,\n} from \"./SaturationSpectrum\";\nimport { DEFAULT_COLOR } from \"./defaultColor\";\nimport type { BaseProps } from \"./utils/common\";\nimport { toColorValue } from \"./utils/toColorValue\";\nimport { toStringValue } from \"./utils/toStringValue\";\n\nexport type ColorPickerProps = PropsWithChildren<{\n\tclassName?: string;\n\thueStyle?: CSSProperties;\n\n\tonDrag?: (value: string, newColor: ColorInput) => void;\n\tonChange?: (value: string, newColor: ColorInput) => void;\n\n\tvalue?: string | ColorFormats.HSVA;\n\tdefaultColor?: string | ColorFormats.HSVA;\n\n\thueHeight?: number;\n\thueMargin?: number;\n\thueWidth?: number;\n\n\tsaturationWidth?: number;\n\tsaturationHeight?: number;\n}>;\n\ntype StateType = {\n\tdragHue: number | null;\n};\n\nexport class ColorPicker extends Component<ColorPickerProps, StateType> {\n\t// eslint-disable-next-line react/static-property-placement\n\tstatic defaultProps = {\n\t\tclassName: \"\",\n\t\thueStyle: {},\n\n\t\tonDrag: Function.prototype,\n\t\tonChange: Function.prototype,\n\n\t\tvalue: null,\n\t\tdefaultColor: DEFAULT_COLOR,\n\n\t\thueHeight: null,\n\t\thueMargin: 10,\n\t\thueWidth: 30,\n\n\t\tsaturationWidth: 300,\n\t\tsaturationHeight: 300,\n\n\t\tchildren: null,\n\t};\n\n\tconstructor(props: ColorPickerProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdragHue: null,\n\t\t};\n\t}\n\n\thandleSaturationChange = (color: ColorInput) => {\n\t\tthis.handleChange(color);\n\t};\n\n\thandleHueChange = (color: ColorInput) => {\n\t\tthis.handleChange(color);\n\t};\n\n\thandleHueDrag = (hsv: string | ColorFormats.HSVA) => {\n\t\tif (typeof hsv === \"string\") {\n\t\t\tthrow new Error(\"color cannot be string\");\n\t\t}\n\n\t\tthis.setState({\n\t\t\tdragHue: hsv.h,\n\t\t});\n\n\t\tthis.handleDrag(hsv);\n\t};\n\n\thandleSaturationDrag = (hsv: ColorInput) => {\n\t\tthis.handleDrag(hsv);\n\t};\n\n\thandleHueMouseDown = (hsv: string | ColorFormats.HSVA) => {\n\t\tif (typeof hsv === \"string\") {\n\t\t\tthrow new Error(\"color cannot be string\");\n\t\t}\n\n\t\tthis.setState({\n\t\t\tdragHue: hsv.h,\n\t\t});\n\t};\n\n\thandleSaturationMouseDown = (hsv: string | ColorFormats.HSVA) => {\n\t\tif (typeof hsv === \"string\") {\n\t\t\tthrow new Error(\"color cannot be string\");\n\t\t}\n\n\t\tthis.setState({\n\t\t\tdragHue: hsv.h,\n\t\t});\n\t};\n\n\thandleDrag(color: ColorInput) {\n\t\tconst { onDrag } = this.props;\n\n\t\tif (!onDrag) {\n\t\t\treturn;\n\t\t}\n\n\t\tonDrag(toStringValue(color), color);\n\t}\n\n\thandleChange(color: ColorInput) {\n\t\tif (typeof color === \"string\") {\n\t\t\tthrow new Error(\"color cannot be string\");\n\t\t}\n\n\t\tconst { onChange } = this.props;\n\n\t\tif (!onChange) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState({\n\t\t\tdragHue: null,\n\t\t});\n\n\t\tconst newColor: ColorInput = {\n\t\t\t...color,\n\t\t};\n\n\t\tconst value = toStringValue(newColor);\n\n\t\tonChange(value, newColor);\n\t}\n\n\trender() {\n\t\tconst { props } = this;\n\t\tconst {\n\t\t\tclassName: propsClassName,\n\t\t\thueStyle: propsHueStyle,\n\t\t\thueHeight,\n\t\t\thueMargin,\n\t\t\thueWidth,\n\t\t\tdefaultColor,\n\t\t\tvalue: propsValue,\n\t\t\tsaturationHeight,\n\t\t\tsaturationWidth,\n\t\t\tonChange,\n\t\t\tonDrag,\n\t\t\t...divProps\n\t\t} = props;\n\n\t\tconst { dragHue } = this.state;\n\n\t\tconst className = cx(propsClassName, \"cp react-color-picker\");\n\t\tconst hueStyle = {\n\t\t\t...propsHueStyle,\n\t\t\tmarginLeft: hueMargin,\n\t\t};\n\n\t\tconst value = toColorValue(propsValue || defaultColor || DEFAULT_COLOR);\n\n\t\tconst { children } = props;\n\t\tlet hueSpectrumProps: BaseProps & HueSpectrumProps = {};\n\t\tlet saturationSpectrumProps: BaseProps & SaturationSpectrumProps = {};\n\n\t\tif (children) {\n\t\t\tfor (const child of Children.toArray(children)) {\n\t\t\t\tif (!child || !(child as ReactElement).type) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst childElement = child as ReactElement;\n\n\t\t\t\tswitch (childElement.type) {\n\t\t\t\t\tcase SaturationSpectrum:\n\t\t\t\t\t\tsaturationSpectrumProps = childElement.props;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase HueSpectrum:\n\t\t\t\t\t\thueSpectrumProps = childElement.props;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst saturationConfig: BaseProps & SaturationSpectrumProps = {\n\t\t\tonDrag: this.handleSaturationDrag,\n\t\t\tonChange: this.handleSaturationChange,\n\t\t\tonMouseDown: this.handleSaturationMouseDown,\n\t\t\t...saturationSpectrumProps,\n\t\t};\n\n\t\tif (saturationConfig.width === undefined) {\n\t\t\tsaturationConfig.width = saturationWidth;\n\t\t}\n\t\tif (saturationConfig.height === undefined) {\n\t\t\tsaturationConfig.height = saturationHeight;\n\t\t}\n\t\tsaturationConfig.inPicker = true;\n\n\t\tconst hueConfig: BaseProps & HueSpectrumProps = {\n\t\t\tonDrag: this.handleHueDrag,\n\t\t\tonChange: this.handleHueChange,\n\t\t\tonMouseDown: this.handleHueMouseDown,\n\t\t\tstyle: hueStyle,\n\t\t\t...hueSpectrumProps,\n\t\t};\n\n\t\tif (hueConfig.width === undefined) {\n\t\t\thueConfig.width = hueWidth;\n\t\t}\n\t\tif (hueConfig.height === undefined) {\n\t\t\thueConfig.height = hueHeight || saturationHeight;\n\t\t}\n\t\thueConfig.inPicker = true;\n\n\t\tif (dragHue) {\n\t\t\tvalue.h = dragHue;\n\t\t}\n\n\t\tsaturationConfig.value = {\n\t\t\t...value,\n\t\t};\n\t\thueConfig.value = {\n\t\t\t...value,\n\t\t};\n\n\t\treturn (\n\t\t\t<div {...divProps} className={className}>\n\t\t\t\t<SaturationSpectrum {...saturationConfig} />\n\t\t\t\t<HueSpectrum {...hueConfig} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n","export const DEFAULT_COLOR = \"red\";\n","/* eslint-disable */\nimport {\n\tComponent,\n\ttype MouseEvent as ReactMouseEvent,\n\ttype TouchEvent as ReactTouchEvent,\n\tcreateRef,\n} from \"react\";\nimport type { ColorFormats, ColorInput } from \"tinycolor2\";\n\nimport type { ConfigType, PointType } from \"../types\";\nimport { toStringValue } from \"./toStringValue\";\n\ntype StateType = {\n\tdragHue?: number;\n\th?: number;\n\ttop: number;\n\tleft: number;\n\tmouseDown: PointType | null;\n\tpointerTop?: number;\n\tpointerLeft?: number;\n};\n\nexport const baseInitialState: StateType = {\n\ttop: 0,\n\tleft: 0,\n\tmouseDown: null,\n};\n\nexport type BaseProps = {\n\tinPicker?: boolean;\n\tonMouseDown?: (...colors: readonly (string | ColorFormats.HSVA)[]) => void;\n\tonDrag?: (...colors: readonly (string | ColorFormats.HSVA)[]) => void;\n\tonChange?: (...colors: readonly ColorInput[]) => void;\n};\n\nexport const baseDefaultProps = {\n\tinPicker: false,\n\tonMouseDown: undefined,\n\tonDrag: undefined,\n\tonChange: undefined,\n};\n\nfunction getEventInfo(\n\t[clientX, clientY]: [number, number],\n\tregion: DOMRect,\n): PointType {\n\tconst x = clientX - region.left;\n\tconst y = clientY - region.top;\n\n\treturn {\n\t\tx,\n\t\ty,\n\t\twidth: region.width,\n\t\theight: region.height,\n\t};\n}\n\nexport class BaseComponent<AdditionalProps> extends Component<\n\tBaseProps & AdditionalProps,\n\tStateType\n> {\n\tstatic defaultProps = baseDefaultProps;\n\n\thsv: ColorFormats.HSVA | null = null;\n\n\tstate = baseInitialState;\n\n\trootRef = createRef<HTMLDivElement>();\n\n\tupdateColor(_: PointType): ColorFormats.HSVA {\n\t\treturn {\n\t\t\th: 0,\n\t\t\ts: 0,\n\t\t\tv: 0,\n\t\t\ta: 0,\n\t\t};\n\t}\n\n\tgetColors(hsv: ColorFormats.HSVA) {\n\t\tconst { inPicker } = this.props;\n\n\t\tconst first = inPicker ? hsv : toStringValue(hsv);\n\n\t\tconst args: (string | ColorFormats.HSVA)[] = [first];\n\n\t\tif (!inPicker) {\n\t\t\targs.push({\n\t\t\t\t...hsv,\n\t\t\t});\n\t\t}\n\n\t\treturn args;\n\t}\n\n\tonStartMove = (clientX: number, clientY: number) => {\n\t\tconst rootNode = this.rootRef.current;\n\n\t\tif (!rootNode) {\n\t\t\tthrow new Error(\"root ref is not provided\");\n\t\t}\n\n\t\tconst rect = rootNode.getBoundingClientRect();\n\t\tconst info = getEventInfo([clientX, clientY], rect);\n\n\t\tconst config: ConfigType = {\n\t\t\tinitialPoint: info,\n\t\t\tminLeft: 0,\n\t\t\tmaxLeft: rect.width,\n\t\t};\n\n\t\tconst onMouseMove = (dragEvent: MouseEvent) => {\n\t\t\tconst dragInfo = getEventInfo(\n\t\t\t\t[dragEvent.clientX, dragEvent.clientY],\n\t\t\t\trect,\n\t\t\t);\n\t\t\tconst newHsv = this.updateColor(dragInfo);\n\n\t\t\tthis.handleDrag(\n\t\t\t\t{\n\t\t\t\t\t...config,\n\t\t\t\t\tdiff: {\n\t\t\t\t\t\tleft: dragInfo.x - info.x,\n\t\t\t\t\t\ttop: dragInfo.y - info.y,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tnewHsv,\n\t\t\t);\n\t\t};\n\n\t\tconst onTouchMove = (event: TouchEvent) => {\n\t\t\tevent.preventDefault();\n\t\t\tconst firstTouch = event.touches[0];\n\n\t\t\tif (!firstTouch) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst dragInfo = getEventInfo(\n\t\t\t\t[firstTouch.clientX, firstTouch.clientY],\n\t\t\t\trect,\n\t\t\t);\n\t\t\tconst newHsv = this.updateColor(dragInfo);\n\n\t\t\tthis.handleDrag(\n\t\t\t\t{\n\t\t\t\t\t...config,\n\t\t\t\t\tdiff: {\n\t\t\t\t\t\tleft: dragInfo.x - info.x,\n\t\t\t\t\t\ttop: dragInfo.y - info.y,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tnewHsv,\n\t\t\t);\n\t\t};\n\n\t\tdocument.addEventListener(\"mousemove\", onMouseMove);\n\t\tdocument.addEventListener(\"touchmove\", onTouchMove);\n\n\t\tconst onEnd = () => {\n\t\t\tdocument.removeEventListener(\"mousemove\", onMouseMove);\n\t\t\tdocument.removeEventListener(\"touchmove\", onTouchMove);\n\t\t\tdocument.removeEventListener(\"mouseup\", onEnd);\n\t\t\tdocument.removeEventListener(\"touchend\", onEnd);\n\t\t};\n\n\t\tdocument.addEventListener(\"mouseup\", onEnd);\n\t\tdocument.addEventListener(\"touchend\", onEnd);\n\n\t\tthis.updateColor(info);\n\t\tthis.handleMouseDown(config);\n\t};\n\n\tonMouseDown = (event: ReactMouseEvent) => {\n\t\tevent.preventDefault();\n\t\tthis.onStartMove(event.clientX, event.clientY);\n\t};\n\n\tonTouchStart = (event: ReactTouchEvent) => {\n\t\tevent.preventDefault();\n\n\t\tconst firstTouch = event.touches[0];\n\n\t\tif (!firstTouch) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.onStartMove(firstTouch.clientX, firstTouch.clientY);\n\t};\n\n\thandleMouseDown = (config: ConfigType) => {\n\t\tconst { onMouseDown } = this.props;\n\n\t\tif (!this.hsv) {\n\t\t\tthrow new Error(\"HSV is not setted\");\n\t\t}\n\n\t\tif (onMouseDown) {\n\t\t\tonMouseDown(...this.getColors(this.hsv));\n\t\t}\n\n\t\tthis.handleDrag(config, this.hsv);\n\t};\n\n\thandleUpdate(config: ConfigType) {\n\t\tconst diff = config.diff || { top: 0, left: 0 };\n\t\tconst { initialPoint } = config;\n\n\t\tif (initialPoint) {\n\t\t\tlet left;\n\n\t\t\tleft = initialPoint.x + diff.left;\n\t\t\tconst top = initialPoint.y + diff.top;\n\n\t\t\tleft = Math.max(left, config.minLeft);\n\t\t\tleft = Math.min(left, config.maxLeft);\n\n\t\t\tthis.setState({\n\t\t\t\ttop,\n\t\t\t\tleft,\n\t\t\t\tmouseDown: {\n\t\t\t\t\tx: left,\n\t\t\t\t\ty: top,\n\t\t\t\t\twidth: initialPoint.width,\n\t\t\t\t\theight: initialPoint.height,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\thandleDrag(config: ConfigType, hsv: ColorFormats.HSVA) {\n\t\tconst { onDrag } = this.props;\n\n\t\tthis.handleUpdate(config);\n\n\t\tif (onDrag) {\n\t\t\tonDrag(...this.getColors(hsv));\n\t\t}\n\t}\n\n\thandleDrop(config: ConfigType, hsv: ColorFormats.HSVA) {\n\t\tconst { onChange } = this.props;\n\n\t\tthis.handleUpdate(config);\n\n\t\tthis.setState({\n\t\t\tmouseDown: null,\n\t\t});\n\n\t\tif (onChange) {\n\t\t\tonChange(...this.getColors(hsv));\n\t\t}\n\t}\n}\n","import tinycolor, {\n\ttype ColorInput,\n\ttype ColorInputWithoutInstance,\n} from \"tinycolor2\";\n\nexport function toColor(color: ColorInput) {\n\treturn tinycolor(color);\n}\n\nexport function toPure(color: ColorInput) {\n\tconst { h } = toColor(color).toHsl();\n\n\treturn toColor({\n\t\th,\n\t\ts: 100,\n\t\tl: 50,\n\t\ta: 1,\n\t});\n}\n\nexport function fromRatio(color: ColorInputWithoutInstance) {\n\treturn tinycolor.fromRatio(color);\n}\n\nexport function toAlpha(color: ColorInput, alpha: number) {\n\tconst newAlpha = alpha > 1 ? alpha / 100 : alpha;\n\n\tconst newColor = toColor(color).toRgb();\n\tnewColor.a = newAlpha;\n\n\treturn toColor(newColor);\n}\n\nexport function toHsv(color: ColorInput) {\n\treturn toColor(color).toHsv();\n}\n","import type { ColorInput } from \"tinycolor2\";\nimport { toColor } from \"./color\";\n\nexport function toStringValue(color: ColorInput) {\n\tif (typeof color === \"string\") {\n\t\tthrow new Error(\"color cannot be string\");\n\t}\n\n\tconst newColor = toColor({\n\t\t...color,\n\t});\n\n\treturn newColor.toRgb().a === 1\n\t\t? newColor.toHexString()\n\t\t: newColor.toRgbString();\n}\n","import type { ColorFormats } from \"tinycolor2\";\nimport { toHsv } from \"./color\";\n\nexport function toColorValue(\n\tvalue: string | ColorFormats.HSVA,\n): ColorFormats.HSVA {\n\tif (typeof value === \"string\") {\n\t\treturn toHsv(value);\n\t}\n\n\treturn {\n\t\th: value.h,\n\t\ts: value.s,\n\t\tv: value.v,\n\t\ta: value.a,\n\t};\n}\n","import type { PointType } from \"../types\";\n\nexport function validate(point: PointType) {\n\tconst { height, width } = point;\n\n\tif (point.x < 0) {\n\t\tpoint.x = 0;\n\t}\n\n\tif (point.x >= width) {\n\t\tpoint.x = width;\n\t}\n\n\tif (point.y < 0) {\n\t\tpoint.y = 0;\n\t}\n\n\tif (point.y >= height) {\n\t\tpoint.y = height;\n\t}\n\n\treturn point;\n}\n","import type { CSSProperties } from \"react\";\nimport type { ColorFormats } from \"tinycolor2\";\n\nimport { DEFAULT_COLOR } from \"./defaultColor\";\nimport type { PointType } from \"./types\";\nimport {\n\tBaseComponent,\n\tbaseDefaultProps,\n\tbaseInitialState,\n} from \"./utils/common\";\nimport { toColorValue } from \"./utils/toColorValue\";\nimport { validate } from \"./utils/validate\";\n\nconst POINTER_SIZE = 3;\n\nexport type HueSpectrumProps = {\n\tvalue?: string | ColorFormats.HSVA;\n\theight?: number;\n\twidth?: number;\n\tpointerSize?: number;\n\tdefaultColor?: string | ColorFormats.HSVA;\n\tstyle?: CSSProperties;\n};\n\nexport class HueSpectrum extends BaseComponent<HueSpectrumProps> {\n\tstatic defaultProps = {\n\t\t...baseDefaultProps,\n\n\t\tvalue: null,\n\t\theight: 300,\n\t\twidth: 30,\n\t\tpointerSize: POINTER_SIZE,\n\t\tdefaultColor: DEFAULT_COLOR,\n\t};\n\n\tstate = {\n\t\t...baseInitialState,\n\t\th: 0,\n\t};\n\n\tmounted = false;\n\n\tisComponentMounted() {\n\t\treturn this.mounted;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.mounted = true;\n\t\tthis.updateDragPositionIf();\n\t}\n\n\tupdateDragPositionIf() {\n\t\tif (!this.props.height) {\n\t\t\tthis.setState({});\n\t\t}\n\t}\n\n\tgetDragPosition() {\n\t\tconst { height, pointerSize = POINTER_SIZE } = this.props;\n\n\t\tif (!height && !this.isComponentMounted()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst computedHeight =\n\t\t\theight || this.rootRef.current?.getBoundingClientRect().height;\n\n\t\tif (typeof computedHeight !== \"number\") {\n\t\t\tthrow new Error(\"cannot determine the height\");\n\t\t}\n\n\t\tconst size = pointerSize;\n\n\t\tif (!this.hsv) {\n\t\t\tthrow new Error(\"HSV is not setted\");\n\t\t}\n\n\t\tconst pos = Math.round((this.hsv.h * computedHeight) / 360);\n\t\tconst diff = Math.round(size / 2);\n\n\t\treturn pos - diff;\n\t}\n\n\tupdateColor(point: PointType) {\n\t\tconst newPoint = validate(point);\n\n\t\tif (!this.hsv) {\n\t\t\tthrow new Error(\"HSV is not setted\");\n\t\t}\n\n\t\tthis.hsv.h = (newPoint.y * 360) / newPoint.height;\n\n\t\tconst newHsv = {\n\t\t\t...this.hsv,\n\t\t};\n\n\t\tlet newH: number;\n\n\t\tif (this.hsv.h !== 0) {\n\t\t\tnewH = this.hsv.h;\n\t\t}\n\n\t\tnewH = this.hsv.h !== 0 ? this.hsv.h : 0;\n\n\t\tthis.setState({\n\t\t\th: newH,\n\t\t});\n\n\t\tthis.hsv = newHsv;\n\n\t\treturn newHsv;\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tstyle,\n\t\t\tvalue,\n\t\t\tdefaultColor,\n\t\t\tpointerSize = POINTER_SIZE,\n\t\t\theight,\n\t\t\twidth,\n\t\t} = this.props;\n\n\t\tconst { h } = this.state;\n\n\t\tthis.hsv = toColorValue(value || defaultColor || DEFAULT_COLOR);\n\n\t\tif (h === 360 && !this.hsv.h) {\n\t\t\t// in order to show bottom red as well on drag\n\t\t\tthis.hsv.h = 360;\n\t\t}\n\n\t\tconst rootStyle = {\n\t\t\t...style,\n\t\t};\n\n\t\tif (height) {\n\t\t\trootStyle.height = height;\n\t\t}\n\t\tif (width) {\n\t\t\trootStyle.width = width;\n\t\t}\n\n\t\tconst dragStyle: CSSProperties = {\n\t\t\theight: pointerSize,\n\t\t};\n\n\t\tconst dragPos = this.getDragPosition();\n\n\t\tif (dragPos !== null) {\n\t\t\tdragStyle.top = dragPos;\n\t\t\tdragStyle.display = \"block\";\n\t\t}\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"react-color-picker__hue-spectrum\"\n\t\t\t\tstyle={rootStyle}\n\t\t\t\tonMouseDown={this.onMouseDown}\n\t\t\t\tonTouchStart={this.onTouchStart}\n\t\t\t\trole=\"button\"\n\t\t\t\tref={this.rootRef}\n\t\t\t\ttabIndex={0}\n\t\t\t>\n\t\t\t\t<div className=\"react-color-picker__hue-drag\" style={dragStyle}>\n\t\t\t\t\t<div className=\"react-color-picker__hue-inner\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import cx from \"classnames\";\nimport { CSSProperties } from \"react\";\nimport type { ColorFormats } from \"tinycolor2\";\n\nimport { DEFAULT_COLOR } from \"./defaultColor\";\nimport type { PointType } from \"./types\";\nimport { fromRatio } from \"./utils/color\";\nimport {\n\tBaseComponent,\n\ttype BaseProps,\n\tbaseDefaultProps,\n} from \"./utils/common\";\nimport { toColorValue } from \"./utils/toColorValue\";\nimport { validate } from \"./utils/validate\";\n\nconst DEFAULT_POINTER_SIZE = 7;\n\nconst getSaturationForPoint = (point: PointType) => point.x / point.width;\n\nconst getColorValueForPoint = (point: PointType) =>\n\t(point.height - point.y) / point.height;\n\nconst prepareBackgroundColor = (color: ColorFormats.HSVA) => {\n\tconst hsv = color;\n\n\tconst col = fromRatio({\n\t\th: (hsv.h % 360) / 360,\n\t\ts: 1,\n\t\tv: 1,\n\t});\n\n\treturn col.toRgbString();\n};\n\nexport type SaturationSpectrumProps = {\n\tclassName?: string;\n\tcolor?: string | ColorFormats.HSVA;\n\tvalue?: string | ColorFormats.HSVA;\n\theight?: number;\n\twidth?: number;\n\tpointerSize?: number;\n\tdefaultColor?: string | ColorFormats.HSVA;\n\tstyle?: CSSProperties;\n};\n\nexport class SaturationSpectrum extends BaseComponent<SaturationSpectrumProps> {\n\tstatic defaultProps = {\n\t\t...baseDefaultProps,\n\n\t\tvalue: null,\n\t\theight: 300,\n\t\twidth: 300,\n\t\tpointerSize: DEFAULT_POINTER_SIZE,\n\t\tdefaultColor: DEFAULT_COLOR,\n\t\tisSaturationSpectrum: true,\n\t};\n\n\tmounted = false;\n\n\tcomponentDidMount() {\n\t\tthis.mounted = true;\n\t\tthis.updateDragPositionIf();\n\t}\n\n\tisComponentMounted() {\n\t\treturn this.mounted;\n\t}\n\n\tupdateDragPositionIf() {\n\t\tif (!this.props.height || !this.props.width) {\n\t\t\tthis.setState({});\n\t\t}\n\t}\n\n\tgetDragPosition() {\n\t\tconst { value, pointerSize = DEFAULT_POINTER_SIZE } = this.props;\n\t\tlet { width, height } = this.props;\n\t\tconst { mouseDown } = this.state;\n\n\t\tconst sizeDefined = typeof width === \"number\" && typeof height === \"number\";\n\n\t\tif (!sizeDefined && !this.isComponentMounted()) {\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!sizeDefined) {\n\t\t\tconst rootNode = this.rootRef.current;\n\n\t\t\tif (!rootNode) {\n\t\t\t\tthrow new Error(\"root ref is not provided\");\n\t\t\t}\n\n\t\t\tconst rect = rootNode.getBoundingClientRect();\n\t\t\theight = height || rect.height;\n\t\t\twidth = width || rect.width;\n\t\t}\n\n\t\tif (!this.hsv) {\n\t\t\tthrow new Error(\"HSV is not setted\");\n\t\t}\n\n\t\tif (typeof width !== \"number\" || typeof height !== \"number\") {\n\t\t\tthrow new Error(\"size is not defined\");\n\t\t}\n\n\t\tlet x = this.hsv.s * width;\n\t\tconst y = height - this.hsv.v * height;\n\n\t\tconst size = pointerSize;\n\t\tconst diff = Math.floor(size / 2);\n\n\t\tif (value && mouseDown && !Number.isNaN(mouseDown.x)) {\n\t\t\t({ x } = mouseDown);\n\t\t}\n\n\t\treturn {\n\t\t\tleft: x - diff,\n\t\t\ttop: y - diff,\n\t\t};\n\t}\n\n\tprepareProps(thisProps: BaseProps & SaturationSpectrumProps) {\n\t\tconst props: BaseProps & SaturationSpectrumProps = {\n\t\t\t...thisProps,\n\t\t};\n\n\t\tconst color = props.value || props.defaultColor || DEFAULT_COLOR;\n\n\t\tprops.color = color;\n\n\t\tthis.hsv = toColorValue(color);\n\n\t\tprops.style = this.prepareStyle(props);\n\t\tprops.className = cx(\n\t\t\tthisProps.className,\n\t\t\t\"react-color-picker__saturation-spectrum\",\n\t\t);\n\n\t\treturn props;\n\t}\n\n\tprepareStyle(props: BaseProps & SaturationSpectrumProps) {\n\t\tconst style = {\n\t\t\t...props.style,\n\t\t};\n\n\t\tif (props.height) {\n\t\t\tstyle.height = props.height;\n\t\t}\n\n\t\tif (props.width) {\n\t\t\tstyle.width = props.width;\n\t\t}\n\n\t\tif (!this.hsv) {\n\t\t\tthrow new Error(\"HSV is not setted\");\n\t\t}\n\n\t\tstyle.backgroundColor = prepareBackgroundColor(this.hsv);\n\n\t\treturn style;\n\t}\n\n\trender() {\n\t\tconst { pointerSize = DEFAULT_POINTER_SIZE } = this.props;\n\t\tconst props = this.prepareProps(this.props);\n\n\t\tconst dragStyle: CSSProperties = {\n\t\t\twidth: pointerSize,\n\t\t\theight: pointerSize,\n\t\t};\n\n\t\tconst dragPos = this.getDragPosition();\n\n\t\tif (dragPos) {\n\t\t\tdragStyle.top = dragPos.top;\n\t\t\tdragStyle.left = dragPos.left;\n\t\t\tdragStyle.display = \"block\";\n\t\t}\n\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName={props.className}\n\t\t\t\tstyle={props.style}\n\t\t\t\tonMouseDown={this.onMouseDown}\n\t\t\t\tonTouchStart={this.onTouchStart}\n\t\t\t\trole=\"button\"\n\t\t\t\tref={this.rootRef}\n\t\t\t\ttabIndex={0}\n\t\t\t>\n\t\t\t\t<div className=\"react-color-picker__saturation-white\">\n\t\t\t\t\t<div className=\"react-color-picker__saturation-black\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"react-color-picker__saturation-drag\" style={dragStyle}>\n\t\t\t\t\t<div className=\"react-color-picker__saturation-inner\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tupdateColor(point: PointType) {\n\t\tconst newPoint = validate(point);\n\n\t\tif (!this.hsv) {\n\t\t\tthrow new Error(\"HSV is not setted\");\n\t\t}\n\n\t\tthis.hsv.s = getSaturationForPoint(newPoint);\n\t\tthis.hsv.v = getColorValueForPoint(newPoint);\n\n\t\tconst newHsv = {\n\t\t\t...this.hsv,\n\t\t};\n\n\t\tthis.hsv = newHsv;\n\n\t\treturn newHsv;\n\t}\n}\n"],"mappings":"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","names":["import_classnames","import_react","tinycolor","tinycolor","import_jsx_runtime","cx","import_jsx_runtime","cx"]}